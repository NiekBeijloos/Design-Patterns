<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by Microsoft Visio, SVG Export FactoryMethod.svg Page-1 -->
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ev="http://www.w3.org/2001/xml-events"
		xmlns:v="http://schemas.microsoft.com/visio/2003/SVGExtensions/" width="13.5433in" height="19.9803in"
		viewBox="0 0 975.118 1438.58" xml:space="preserve" color-interpolation-filters="sRGB" class="st38">
	<v:documentProperties v:langID="1033" v:metric="true" v:viewMarkup="false">
		<v:userDefs>
			<v:ud v:nameU="msvSubprocessMaster" v:prompt="" v:val="VT4(Rectangle)"/>
			<v:ud v:nameU="msvNoAutoConnect" v:val="VT0(1):26"/>
		</v:userDefs>
	</v:documentProperties>

	<style type="text/css">
	<![CDATA[
		.st1 {fill:#759fcc;stroke:#c7c8c8;stroke-width:0.25}
		.st2 {fill:#feffff;font-family:Calibri;font-size:0.833336em;font-weight:bold}
		.st3 {font-size:1em;font-weight:normal}
		.st4 {fill:#d06d29;stroke:#ae5a21;stroke-width:0.75}
		.st5 {fill:#feffff;font-family:Calibri;font-size:0.833336em}
		.st6 {font-size:1em}
		.st7 {fill:#61973d;stroke:#507e31;stroke-width:0.75}
		.st8 {fill:url(#grad0-18);stroke:#61973d;stroke-width:0.75}
		.st9 {fill:#61973d;font-family:Calibri;font-size:0.833336em}
		.st10 {font-size:1em;font-weight:bold}
		.st11 {font-size:1em;text-decoration:underline}
		.st12 {fill:url(#grad0-67);stroke:#61973d;stroke-width:0.75}
		.st13 {marker-end:url(#mrkr4-73);stroke:#70ad47;stroke-linecap:round;stroke-linejoin:round;stroke-width:2}
		.st14 {fill:#70ad47;fill-opacity:1;stroke:#70ad47;stroke-opacity:1;stroke-width:0.52631578947368}
		.st15 {fill:#ffffff;stroke:none;stroke-linecap:butt;stroke-width:7.2}
		.st16 {fill:#61973d;font-family:Calibri;font-size:0.666664em}
		.st17 {fill:#dfa800;stroke:#ba8c00;stroke-width:0.75}
		.st18 {marker-end:url(#mrkr4-85);stroke:#fec000;stroke-linecap:round;stroke-linejoin:round;stroke-width:2}
		.st19 {fill:#fec000;fill-opacity:1;stroke:#fec000;stroke-opacity:1;stroke-width:0.52631578947368}
		.st20 {fill:#dfa800;font-family:Calibri;font-size:0.666664em}
		.st21 {fill:url(#grad0-92);stroke:#d06d29;stroke-width:0.75}
		.st22 {fill:#d06d29;font-family:Calibri;font-size:0.833336em}
		.st23 {fill:url(#grad0-133);stroke:#d06d29;stroke-width:0.75}
		.st24 {marker-end:url(#mrkr4-139);stroke:#ed7d31;stroke-linecap:round;stroke-linejoin:round;stroke-width:2}
		.st25 {fill:#ed7d31;fill-opacity:1;stroke:#ed7d31;stroke-opacity:1;stroke-width:0.52631578947368}
		.st26 {fill:#ffffff;stroke:none;stroke-linecap:butt}
		.st27 {fill:#d06d29;font-family:Calibri;font-size:0.666664em}
		.st28 {fill:url(#grad0-293);stroke:#30518f;stroke-width:0.75}
		.st29 {marker-end:url(#mrkr4-301);stroke:#4672c4;stroke-linecap:round;stroke-linejoin:round;stroke-width:2}
		.st30 {fill:#4672c4;fill-opacity:1;stroke:#4672c4;stroke-opacity:1;stroke-width:0.52631578947368}
		.st31 {fill:#3c63ac;font-family:Calibri;font-size:0.666664em}
		.st32 {fill:url(#grad0-308);stroke:#3c63ac;stroke-width:0.75}
		.st33 {fill:#3c63ac;font-family:Calibri;font-size:0.833336em}
		.st34 {fill:url(#grad0-327);stroke:#3c63ac;stroke-width:0.75}
		.st35 {fill:url(#grad0-339);stroke:#dfa800;stroke-width:0.75}
		.st36 {fill:#dfa800;font-family:Calibri;font-size:0.833336em}
		.st37 {fill:url(#grad0-362);stroke:#dfa800;stroke-width:0.75}
		.st38 {fill:none;fill-rule:evenodd;font-size:12px;overflow:visible;stroke-linecap:square;stroke-miterlimit:3}
	]]>
	</style>

	<defs id="Patterns_And_Gradients">
		<linearGradient id="grad0-18" x1="0" y1="0" x2="1" y2="0" gradientTransform="rotate(60 0.5 0.5)">
			<stop offset="0" stop-color="#ebf1e8" stop-opacity="1"/>
			<stop offset="0.24" stop-color="#f5f8f4" stop-opacity="1"/>
			<stop offset="0.54" stop-color="#feffff" stop-opacity="1"/>
		</linearGradient>
		<linearGradient id="grad0-67" x1="0" y1="0" x2="1" y2="0" gradientTransform="rotate(60 0.5 0.5)">
			<stop offset="0" stop-color="#cedcc9" stop-opacity="1"/>
			<stop offset="0.24" stop-color="#d9e3d5" stop-opacity="1"/>
			<stop offset="0.54" stop-color="#578837" stop-opacity="1"/>
		</linearGradient>
		<linearGradient id="grad0-92" x1="0" y1="0" x2="1" y2="0" gradientTransform="rotate(60 0.5 0.5)">
			<stop offset="0" stop-color="#fbece7" stop-opacity="1"/>
			<stop offset="0.24" stop-color="#fdf5f3" stop-opacity="1"/>
			<stop offset="0.54" stop-color="#feffff" stop-opacity="1"/>
		</linearGradient>
		<linearGradient id="grad0-133" x1="0" y1="0" x2="1" y2="0" gradientTransform="rotate(60 0.5 0.5)">
			<stop offset="0" stop-color="#f7c6b9" stop-opacity="1"/>
			<stop offset="0.24" stop-color="#f4d1c8" stop-opacity="1"/>
			<stop offset="0.54" stop-color="#d76213" stop-opacity="1"/>
		</linearGradient>
		<linearGradient id="grad0-293" x1="0" y1="0" x2="1" y2="0" gradientTransform="rotate(250 0.5 0.5)">
			<stop offset="0" stop-color="#3c63ac" stop-opacity="1"/>
			<stop offset="0.48" stop-color="#3c63ac" stop-opacity="1"/>
			<stop offset="0.82" stop-color="#4672c4" stop-opacity="1"/>
		</linearGradient>
		<linearGradient id="grad0-308" x1="0" y1="0" x2="1" y2="0" gradientTransform="rotate(60 0.5 0.5)">
			<stop offset="0" stop-color="#e8ebf4" stop-opacity="1"/>
			<stop offset="0.24" stop-color="#f4f5f9" stop-opacity="1"/>
			<stop offset="0.54" stop-color="#feffff" stop-opacity="1"/>
		</linearGradient>
		<linearGradient id="grad0-327" x1="0" y1="0" x2="1" y2="0" gradientTransform="rotate(60 0.5 0.5)">
			<stop offset="0" stop-color="#c5cae4" stop-opacity="1"/>
			<stop offset="0.24" stop-color="#cfd3e9" stop-opacity="1"/>
			<stop offset="0.54" stop-color="#3359a2" stop-opacity="1"/>
		</linearGradient>
		<linearGradient id="grad0-339" x1="0" y1="0" x2="1" y2="0" gradientTransform="rotate(60 0.5 0.5)">
			<stop offset="0" stop-color="#fef4e7" stop-opacity="1"/>
			<stop offset="0.24" stop-color="#fef9f3" stop-opacity="1"/>
			<stop offset="0.54" stop-color="#feffff" stop-opacity="1"/>
		</linearGradient>
		<linearGradient id="grad0-362" x1="0" y1="0" x2="1" y2="0" gradientTransform="rotate(60 0.5 0.5)">
			<stop offset="0" stop-color="#ffddb3" stop-opacity="1"/>
			<stop offset="0.24" stop-color="#ffe3bd" stop-opacity="1"/>
			<stop offset="0.54" stop-color="#ca9800" stop-opacity="1"/>
		</linearGradient>
	</defs>
	<defs id="Markers">
		<g id="lend4">
			<path d="M 2 1 L 0 0 L 2 -1 L 2 1 " style="stroke:none"/>
		</g>
		<marker id="mrkr4-73" class="st14" v:arrowType="4" v:arrowSize="1" v:setback="3.8" refX="-3.8" orient="auto"
				markerUnits="strokeWidth" overflow="visible">
			<use xlink:href="#lend4" transform="scale(-1.9,-1.9) "/>
		</marker>
		<marker id="mrkr4-85" class="st19" v:arrowType="4" v:arrowSize="1" v:setback="3.8" refX="-3.8" orient="auto"
				markerUnits="strokeWidth" overflow="visible">
			<use xlink:href="#lend4" transform="scale(-1.9,-1.9) "/>
		</marker>
		<marker id="mrkr4-139" class="st25" v:arrowType="4" v:arrowSize="1" v:setback="3.8" refX="-3.8" orient="auto"
				markerUnits="strokeWidth" overflow="visible">
			<use xlink:href="#lend4" transform="scale(-1.9,-1.9) "/>
		</marker>
		<marker id="mrkr4-301" class="st30" v:arrowType="4" v:arrowSize="1" v:setback="3.8" refX="-3.8" orient="auto"
				markerUnits="strokeWidth" overflow="visible">
			<use xlink:href="#lend4" transform="scale(-1.9,-1.9) "/>
		</marker>
	</defs>
	<g v:mID="0" v:index="1" v:groupContext="foregroundPage">
		<v:userDefs>
			<v:ud v:nameU="msvThemeOrder" v:val="VT0(0):26"/>
		</v:userDefs>
		<title>Page-1</title>
		<v:pageProperties v:drawingScale="0.0393701" v:pageScale="0.0393701" v:drawingUnits="24" v:shadowOffsetX="8.50394"
				v:shadowOffsetY="-8.50394"/>
		<v:layer v:name="Connector" v:index="0"/>
		<g id="shape1-1" v:mID="1" v:groupContext="shape" transform="translate(388.346,-595.276)">
			<title>Rectangle</title>
			<desc>Factory Method (=Virtual Constructor) Let subclasses decide w...</desc>
			<v:userDefs>
				<v:ud v:nameU="visVersion" v:val="VT0(15):26"/>
			</v:userDefs>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="101.28" cy="1396.06" width="202.56" height="85.0394"/>
			<rect x="0" y="1353.54" width="202.559" height="85.0394" class="st1"/>
			<text x="21.61" y="1387.06" class="st2" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>Factory Method (=Virtual Constructor)<v:newlineChar/><tspan
						x="9.02" dy="1.2em" class="st3">Let subclasses decide which product the class </tspan><tspan x="77.68"
						dy="1.2em" class="st3">works with.</tspan></text>		</g>
		<g id="shape3-6" v:mID="3" v:groupContext="shape" transform="translate(215.433,-513.071)">
			<title>Rectangle.3</title>
			<desc>The exact dependencies a class works with might vary and clie...</desc>
			<v:userDefs>
				<v:ud v:nameU="visVersion" v:val="VT0(15):26"/>
			</v:userDefs>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="85.0394" cy="1415.91" width="170.08" height="45.3543"/>
			<rect x="0" y="1393.23" width="170.079" height="45.3543" class="st4"/>
			<text x="8.55" y="1406.91" class="st5" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>The exact dependencies a class works <tspan
						x="9.24" dy="1.2em" class="st6">with might vary and clients should be </tspan><tspan x="22.53" dy="1.2em"
						class="st6">‘</tspan>shielded’ from this knowledge</text>		</g>
		<g id="shape18-11" v:mID="18" v:groupContext="shape" transform="translate(639.094,-620.787)">
			<title>Rectangle.18</title>
			<desc>Open Closed</desc>
			<v:userDefs>
				<v:ud v:nameU="visVersion" v:val="VT0(15):26"/>
			</v:userDefs>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="60.9449" cy="1421.57" width="121.89" height="34.0158"/>
			<rect x="0" y="1404.57" width="121.89" height="34.0158" class="st7"/>
			<text x="35.24" y="1424.57" class="st5" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>Open Closed</text>		</g>
		<g id="group20-14" transform="translate(793.417,-382.545)" v:mID="20" v:groupContext="group">
			<v:userDefs>
				<v:ud v:nameU="ControlDistFromCorner" v:prompt="" v:val="VT0(0.33406619583616):24"/>
				<v:ud v:nameU="AngToControl" v:prompt="" v:val="VT0(0.78539816339745):32"/>
				<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
				<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
				<v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
				<v:ud v:nameU="ControlDistFromCorner" v:prompt="" v:val="VT0(0.26058938878762):1"/>
				<v:ud v:nameU="AngToControl" v:prompt="" v:val="VT0(0.58409569627411):32"/>
				<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.23627857826717):1"/>
				<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.15618911598658):1"/>
			</v:userDefs>
			<title>Folded Corner.20</title>
			<desc>The Factory Method pattern compliments the Open Closed princi...</desc>
			<g id="shape20-15" v:mID="20" v:groupContext="groupContent">
				<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197" v:verticalAlign="0"/>
				<v:textRect cx="89.6457" cy="1183.33" width="179.3" height="510.5"/>
				<path d="M0 1438.58 L162.28 1438.58 L179.29 1427.34 L179.29 928.08 L0 928.08 L0 1438.58 Z" class="st8"/>
				<text x="4" y="941.08" class="st9" v:langID="1033"><v:paragraph/><v:tabList/>The Factory Method pattern compliments <tspan
							x="4" dy="1.2em" class="st6">the Open Closed principle by changing </tspan><tspan x="4" dy="1.2em"
							class="st6">the dependency model of a class without </tspan><tspan x="4" dy="1.2em" class="st6">direct modification. This enhances the </tspan><tspan
							x="4" dy="1.2em" class="st10">stability </tspan>and <tspan class="st10">testability </tspan>of the code base. <tspan
							x="4" dy="1.2em" class="st11">All aspects are compared against an </tspan><tspan x="4" dy="1.2em"
							class="st11">implementation where a class </tspan><tspan x="4" dy="1.2em" class="st11">instantiates its required dependencies </tspan><tspan
							x="4" dy="1.2em" class="st11">internally.</tspan> <tspan class="st10">Stability</tspan>, because the chance <tspan
							x="4" dy="1.2em" class="st6">of breaking stable production code </tspan><tspan x="4" dy="1.2em"
							class="st6">becomes smaller in case the dependency </tspan><tspan x="4" dy="1.2em" class="st6">of a class changes. The Factory Method </tspan><tspan
							x="4" dy="1.2em" class="st6">allows the dependency creation of class </tspan><tspan x="4" dy="1.2em"
							class="st6">to be facilitated by its sub</tspan>-classes. A <tspan x="4" dy="1.2em" class="st6">prerequisite, is that the dependency </tspan><tspan
							x="4" dy="1.2em" class="st6">(=Product) must follow an interface to </tspan><tspan x="4" dy="1.2em"
							class="st6">enable this </tspan>‘specialization’ in sub-classes <tspan x="4" dy="1.2em" class="st6">(=Creators). I.e. the pattern allows to </tspan><tspan
							x="4" dy="1.2em" class="st6">change the dependencies of a class via </tspan><tspan x="4" dy="1.2em"
							class="st6">Inheritance. In contrast, instantiating the </tspan><tspan x="4" dy="1.2em" class="st6">Product directly within the Creator will </tspan><tspan
							x="4" dy="1.2em" class="st6">cause the Creator to be modified when </tspan><tspan x="4" dy="1.2em"
							class="st6">the Product it works with has to change. </tspan><tspan x="4" dy="1.2em" class="st6">This </tspan>might result in the production code <tspan
							x="4" dy="1.2em" class="st6">to break in places unrelated to the </tspan><tspan x="4" dy="1.2em"
							class="st6">change. </tspan><tspan class="st10">Testability</tspan>, because the Factory <tspan x="4"
							dy="1.2em" class="st6">method pattern allows mocking the </tspan><tspan x="4" dy="1.2em" class="st6">dependencies of a class. This enables </tspan><tspan
							x="4" dy="1.2em" class="st6">testing in isolation. Isolated </tspan>testing <tspan x="4" dy="1.2em"
							class="st6">results in finding issues faster. The </tspan><tspan x="4" dy="1.2em" class="st6">pattern enables this mockability </tspan>‘ease’ by <tspan
							x="4" dy="1.2em" class="st6">using an interface between Product and </tspan><tspan x="4" dy="1.2em"
							class="st6">Creator and an overwriting possibility of </tspan><tspan x="4" dy="1.2em" class="st6">the dependency creation method </tspan><tspan
							x="4" dy="1.2em" class="st6">(=Factory </tspan>Method) in the Creator. In <tspan x="4" dy="1.2em"
							class="st6">contrast, instantiating the dependency </tspan><tspan x="4" dy="1.2em" class="st6">(=Product) directly in the class under test </tspan><tspan
							x="4" dy="1.2em" class="st6">(=Creator) does not enable mocking the </tspan><tspan x="4" dy="1.2em"
							class="st6">dependency. This would mean testing of </tspan><tspan x="4" dy="1.2em" class="st6">the Creator is always in combination with </tspan><tspan
							x="4" dy="1.2em" class="st6">the Product. The Factory Method pattern </tspan><tspan x="4" dy="1.2em"
							class="st6">prevents that.</tspan></text>			</g>
			<g id="shape21-64" v:mID="21" v:groupContext="shape" transform="translate(162.279,0)">
				<title>Sheet.21</title>
				<v:userDefs>
					<v:ud v:nameU="ControlX" v:prompt="" v:val="VT0(0.94488188976378):24"/>
					<v:ud v:nameU="ControlY" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="FillForegnd" v:prompt="" v:val="VT0(1):26"/>
					<v:ud v:nameU="ControlX" v:prompt="" v:val="VT0(2.3464565815145):1"/>
					<v:ud v:nameU="ControlY" v:prompt="" v:val="VT0(0.21738656090012):1"/>
					<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.23627857826717):1"/>
					<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.15618911598658):1"/>
					<v:ud v:nameU="FillForegnd" v:prompt="" v:val="VT5(#70ad47)"/>
				</v:userDefs>
				<path d="M0 1438.58 L17.01 1427.34 L6.67 1422.93 L0 1438.58 Z" class="st12"/>
			</g>
		</g>
		<g id="shape22-68" v:mID="22" v:groupContext="shape" v:layerMember="0" transform="translate(760.984,-630.709)">
			<title>Dynamic connector.22</title>
			<desc>I.e.</desc>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="16.2165" cy="1431.5" width="40" height="17.6036"/>
			<path d="M0 1431.5 L24.83 1431.5" class="st13"/>
			<rect v:rectContext="textBkgnd" x="11.1989" y="1426.7" width="10.0352" height="9.59985" class="st15"/>
			<text x="11.2" y="1433.9" class="st16" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>I.e.</text>		</g>
		<g id="shape23-76" v:mID="23" v:groupContext="shape" transform="translate(218.268,-620.787)">
			<title>Rectangle.23</title>
			<desc>Negative side of Open Closed</desc>
			<v:userDefs>
				<v:ud v:nameU="visVersion" v:val="VT0(15):26"/>
			</v:userDefs>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="60.9449" cy="1421.57" width="121.89" height="34.0158"/>
			<rect x="0" y="1404.57" width="121.89" height="34.0158" class="st17"/>
			<text x="16.09" y="1418.57" class="st5" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>Negative side of Open <tspan
						x="47.42" dy="1.2em" class="st6">Closed</tspan></text>		</g>
		<g id="shape24-80" v:mID="24" v:groupContext="shape" v:layerMember="0" transform="translate(388.346,-630.709)">
			<title>Dynamic connector.24</title>
			<desc>Why not?</desc>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="-20.6854" cy="1431.5" width="41.38" height="17.6036"/>
			<path d="M0 1431.5 L-40.59 1431.5" class="st18"/>
			<rect v:rectContext="textBkgnd" x="-36.4645" y="1426.7" width="31.5585" height="9.59985" class="st15"/>
			<text x="-36.46" y="1433.9" class="st20" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>Why not?</text>		</g>
		<g id="group51-88" transform="translate(215.433,-42.2362)" v:mID="51" v:groupContext="group">
			<v:userDefs>
				<v:ud v:nameU="ControlDistFromCorner" v:prompt="" v:val="VT0(0.33406619583616):24"/>
				<v:ud v:nameU="AngToControl" v:prompt="" v:val="VT0(0.78539816339745):32"/>
				<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
				<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
				<v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
				<v:ud v:nameU="ControlDistFromCorner" v:prompt="" v:val="VT0(0.24304822640759):1"/>
				<v:ud v:nameU="AngToControl" v:prompt="" v:val="VT0(1.0068219589002):32"/>
				<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.14379215520822):1"/>
				<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.22733939376862):1"/>
			</v:userDefs>
			<title>Folded Corner.51</title>
			<desc>The Factory Method design pattern enables a class to be flexi...</desc>
			<g id="shape51-89" v:mID="51" v:groupContext="groupContent">
				<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197" v:verticalAlign="0"/>
				<v:textRect cx="85.0394" cy="1218.76" width="170.08" height="439.654"/>
				<path d="M0 1438.58 L159.73 1438.58 L170.08 1422.21 L170.08 998.93 L0 998.93 L0 1438.58 Z" class="st21"/>
				<text x="4" y="1011.93" class="st22" v:langID="1033"><v:paragraph/><v:tabList/>The Factory Method design pattern <tspan
							x="4" dy="1.2em" class="st6">enables a class to be flexible in its </tspan><tspan x="4" dy="1.2em"
							class="st6">dependencies. The pattern defines </tspan>‘a <tspan x="4" dy="1.2em" class="st6">class</tspan>’ as the Creator and ‘its <tspan
							x="4" dy="1.2em" class="st6">dependencies</tspan>’ as the Products. <tspan x="4" dy="1.2em" class="st6">(Despite the misleading name, creating </tspan><tspan
							x="4" dy="1.2em" class="st6">objects is not the main responsibility of </tspan><tspan x="4" dy="1.2em"
							class="st6">the </tspan>‘Creator’). A common problem, in <tspan x="4" dy="1.2em" class="st6">software development, is that the </tspan><tspan
							x="4" dy="1.2em" class="st6">exact dependencies of a class might </tspan><tspan x="4" dy="1.2em"
							class="st6">vary. Dependency injection might be </tspan><tspan x="4" dy="1.2em" class="st6">used to resolve this problem. </tspan><tspan
							x="4" dy="1.2em" class="st6">Dependency injection is often realized </tspan><tspan x="4" dy="1.2em"
							class="st6">via composition or aggregation. </tspan><tspan x="4" dy="1.2em" class="st6">However, these kinds of </tspan>dependency <tspan
							x="4" dy="1.2em" class="st6">injection techniques require the client </tspan><tspan x="4" dy="1.2em"
							class="st6">to be familiar with the injected </tspan><tspan x="4" dy="1.2em" class="st6">dependencies. The Factory method </tspan><tspan
							x="4" dy="1.2em" class="st6">pattern </tspan>proposes to ‘shield’ this <tspan x="4" dy="1.2em"
							class="st6">knowledge from the clients and still </tspan><tspan x="4" dy="1.2em" class="st6">have the dependency flexibility. The </tspan><tspan
							x="4" dy="1.2em" class="st6">pattern realizes this via Inheritance, </tspan><tspan x="4" dy="1.2em"
							class="st6">which is another way to apply DI. The </tspan><tspan x="4" dy="1.2em" class="st6">usefulness </tspan>of the pattern is determined <tspan
							x="4" dy="1.2em" class="st6">by the need to sub</tspan>-class the Creator <tspan x="4" dy="1.2em"
							class="st6">not only for Product creation. Clients </tspan><tspan x="4" dy="1.2em" class="st6">should not be forced to sub</tspan>-class <tspan
							class="st11">only </tspan><tspan x="4" dy="1.2em" class="st11">to</tspan> override the factory method and <tspan
							x="4" dy="1.2em" class="st6">create the appropriate dependency </tspan><tspan x="4" dy="1.2em"
							class="st6">(=Product). The Factory method </tspan><tspan x="4" dy="1.2em" class="st6">pattern allows flexibility in the </tspan><tspan
							x="4" dy="1.2em" class="st6">Creator</tspan>’s dependencies (=Products), <tspan x="4" dy="1.2em"
							class="st6">without knowledge on client side about </tspan><tspan x="4" dy="1.2em" class="st6">which product belongs to which </tspan><tspan
							x="4" dy="1.2em" class="st6">Creator or how a product should be </tspan><tspan x="4" dy="1.2em"
							class="st6">created.</tspan></text>			</g>
			<g id="shape52-130" v:mID="52" v:groupContext="shape" transform="translate(155.289,0)">
				<title>Sheet.52</title>
				<v:userDefs>
					<v:ud v:nameU="ControlX" v:prompt="" v:val="VT0(0.94488188976378):24"/>
					<v:ud v:nameU="ControlY" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="FillForegnd" v:prompt="" v:val="VT0(1):26"/>
					<v:ud v:nameU="ControlX" v:prompt="" v:val="VT0(2.1567955818609):1"/>
					<v:ud v:nameU="ControlY" v:prompt="" v:val="VT0(0.12992125865347):1"/>
					<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.14379215520822):1"/>
					<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.22733939376862):1"/>
					<v:ud v:nameU="FillForegnd" v:prompt="" v:val="VT5(#ed7d31)"/>
				</v:userDefs>
				<path d="M4.44 1438.58 L14.79 1422.21 L0 1429.23 L4.44 1438.58 Z" class="st23"/>
			</g>
		</g>
		<g id="shape53-134" v:mID="53" v:groupContext="shape" v:layerMember="0" transform="translate(293.386,-513.071)">
			<title>Dynamic connector.53</title>
			<desc>I.e.</desc>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="7.08661" cy="1450.69" width="40" height="17.6036"/>
			<path d="M7.09 1438.58 L7.09 1462.16" class="st24"/>
			<rect v:rectContext="textBkgnd" x="2.06894" y="1445.89" width="10.0352" height="9.59985" class="st26"/>
			<text x="2.07" y="1453.09" class="st27" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>I.e.</text>		</g>
		<g id="shape54-142" v:mID="54" v:groupContext="shape" transform="translate(404.587,-513.071)">
			<title>Rectangle.54</title>
			<desc>A client needs to work with sub-objects of a main-object but ...</desc>
			<v:userDefs>
				<v:ud v:nameU="visVersion" v:val="VT0(15):26"/>
			</v:userDefs>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="85.0394" cy="1415.91" width="170.08" height="45.3543"/>
			<rect x="0" y="1393.23" width="170.079" height="45.3543" class="st4"/>
			<text x="4.98" y="1406.91" class="st5" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>A client needs to work with sub-objects <tspan
						x="18.69" dy="1.2em" class="st6">of a main</tspan>-object but wants to be <tspan x="17.23" dy="1.2em"
						class="st6">‘</tspan>shielded’ from sub-object details</text>		</g>
		<g id="group58-147" transform="translate(404.587,-3.9685)" v:mID="58" v:groupContext="group">
			<v:userDefs>
				<v:ud v:nameU="ControlDistFromCorner" v:prompt="" v:val="VT0(0.33406619583616):24"/>
				<v:ud v:nameU="AngToControl" v:prompt="" v:val="VT0(0.78539816339745):32"/>
				<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
				<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
				<v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
				<v:ud v:nameU="ControlDistFromCorner" v:prompt="" v:val="VT0(0.1607800284755):1"/>
				<v:ud v:nameU="AngToControl" v:prompt="" v:val="VT0(0.91199052422788):32"/>
				<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.10166635820843):1"/>
				<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.1313191093784):1"/>
			</v:userDefs>
			<title>Folded Corner.58</title>
			<desc>The Factory Method design pattern allows clients to work with...</desc>
			<g id="shape58-148" v:mID="58" v:groupContext="groupContent">
				<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197" v:verticalAlign="0"/>
				<v:textRect cx="85.0394" cy="1199.62" width="170.08" height="477.921"/>
				<path d="M0 1438.58 L162.76 1438.58 L170.08 1429.13 L170.08 960.66 L0 960.66 L0 1438.58 Z" class="st21"/>
				<text x="4" y="973.66" class="st22" v:langID="1033"><v:paragraph/><v:tabList/>The Factory Method design pattern <tspan
							x="4" dy="1.2em" class="st6">allows clients to work with data or </tspan><tspan x="4" dy="1.2em"
							class="st6">manipulation objects (=sub</tspan>-objects), <tspan x="4" dy="1.2em" class="st6">that are interconnected with a </tspan>‘main’ <tspan
							x="4" dy="1.2em" class="st6">object, without familiarity with the sub</tspan>-<tspan x="4" dy="1.2em"
							class="st6">object details. The pattern defines sub</tspan>-<tspan x="4" dy="1.2em" class="st6">objects as Products and the </tspan>‘main’ <tspan
							x="4" dy="1.2em" class="st6">object as the Creator. A common Use </tspan><tspan x="4" dy="1.2em"
							class="st6">Case: a client is dependent on a main</tspan>- <tspan x="4" dy="1.2em" class="st6">object and the client requires to work </tspan><tspan
							x="4" dy="1.2em" class="st6">with a sub</tspan>-object in relation to this <tspan x="4" dy="1.2em"
							class="st6">main</tspan>-object. However, the client does <tspan x="4" dy="1.2em" class="st6">not want to know the details about the </tspan><tspan
							x="4" dy="1.2em" class="st6">concrete sub</tspan>-objects and how sub- and <tspan x="4" dy="1.2em"
							class="st6">main</tspan>-object relate to each other. The <tspan x="4" dy="1.2em" class="st6">client wants to avoid having to </tspan><tspan
							x="4" dy="1.2em" class="st6">instantiate the correct sub</tspan>-objects in <tspan x="4" dy="1.2em"
							class="st6">combination with the main</tspan>-object. A <tspan x="4" dy="1.2em" class="st6">Factory method in the main</tspan>-object <tspan
							x="4" dy="1.2em" class="st6">(=Creator) can clarify the Parallel class </tspan><tspan x="4" dy="1.2em"
							class="st6">relation between main</tspan>- and sub-object <tspan x="4" dy="1.2em" class="st6">(=Product) and hide sub</tspan>-object details <tspan
							x="4" dy="1.2em" class="st6">from the client. The client can simply </tspan><tspan x="4" dy="1.2em"
							class="st6">request the Creator to provide the </tspan><tspan x="4" dy="1.2em" class="st6">corresponding Product. An application </tspan><tspan
							x="4" dy="1.2em" class="st6">of the Factory method pattern is the </tspan><tspan x="4" dy="1.2em"
							class="st6">Iterator design pattern. An Aggregate </tspan><tspan x="4" dy="1.2em" class="st6">(e.g. collection or set) allows the </tspan><tspan
							x="4" dy="1.2em" class="st6">corresponding </tspan>Iterator to be created <tspan x="4" dy="1.2em"
							class="st6">via a Factory method. Concrete </tspan><tspan x="4" dy="1.2em" class="st6">Aggregates override the Factory </tspan><tspan
							x="4" dy="1.2em" class="st6">method, create the corresponding </tspan><tspan x="4" dy="1.2em"
							class="st6">Iterator and provide it to the client. The </tspan><tspan x="4" dy="1.2em" class="st6">client is dependent on an abstract </tspan><tspan
							x="4" dy="1.2em" class="st6">Iterator, is not </tspan>‘burdened’ with iterator <tspan x="4" dy="1.2em"
							class="st6">creation and does not require </tspan><tspan x="4" dy="1.2em" class="st6">knowledge about the relation between </tspan><tspan
							x="4" dy="1.2em" class="st6">Aggregate and Iterator (i.e. which </tspan><tspan x="4" dy="1.2em"
							class="st6">Iterator </tspan>belongs to which Aggregate).</text>			</g>
			<g id="shape59-190" v:mID="59" v:groupContext="shape" transform="translate(160.925,0)">
				<title>Sheet.59</title>
				<v:userDefs>
					<v:ud v:nameU="ControlX" v:prompt="" v:val="VT0(0.94488188976378):24"/>
					<v:ud v:nameU="ControlY" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="FillForegnd" v:prompt="" v:val="VT0(1):26"/>
					<v:ud v:nameU="ControlX" v:prompt="" v:val="VT0(2.235072099452):1"/>
					<v:ud v:nameU="ControlY" v:prompt="" v:val="VT0(0.098425193709223):1"/>
					<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.10166635820843):1"/>
					<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.1313191093784):1"/>
					<v:ud v:nameU="FillForegnd" v:prompt="" v:val="VT5(#ed7d31)"/>
				</v:userDefs>
				<path d="M1.83 1438.58 L9.15 1429.13 L0 1431.5 L1.83 1438.58 Z" class="st23"/>
			</g>
		</g>
		<g id="shape60-193" v:mID="60" v:groupContext="shape" v:layerMember="0" transform="translate(482.539,-513.071)">
			<title>Dynamic connector.60</title>
			<desc>I.e.</desc>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="7.08661" cy="1451.85" width="40" height="17.6036"/>
			<path d="M7.09 1438.58 L7.09 1462.16" class="st24"/>
			<rect v:rectContext="textBkgnd" x="2.06894" y="1447.05" width="10.0352" height="9.59985" class="st15"/>
			<text x="2.07" y="1454.25" class="st27" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>I.e.</text>		</g>
		<g id="shape62-200" v:mID="62" v:groupContext="shape" transform="translate(639.094,-1152.72)">
			<title>Rectangle.62</title>
			<desc>Single Responsibility</desc>
			<v:userDefs>
				<v:ud v:nameU="visVersion" v:val="VT0(15):26"/>
			</v:userDefs>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="60.9449" cy="1421.57" width="121.89" height="34.0158"/>
			<rect x="0" y="1404.57" width="121.89" height="34.0158" class="st7"/>
			<text x="19.59" y="1424.57" class="st5" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>Single Responsibility</text>		</g>
		<g id="shape63-203" v:mID="63" v:groupContext="shape" v:layerMember="0" transform="translate(590.905,-637.795)">
			<title>Dynamic connector.63</title>
			<path d="M0 1438.58 L25.98 1438.58 L25.98 906.65 L40.59 906.65" class="st13"/>
		</g>
		<g id="shape19-208" v:mID="19" v:groupContext="shape" v:layerMember="0" transform="translate(590.905,-630.709)">
			<title>Dynamic connector.19</title>
			<desc>Why?</desc>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="18.3858" cy="1431.5" width="40" height="17.6036"/>
			<path d="M0 1431.5 L37.58 1431.5 L40.59 1431.5" class="st13"/>
			<rect v:rectContext="textBkgnd" x="9.06152" y="1426.7" width="18.6485" height="9.59985" class="st26"/>
			<text x="9.06" y="1433.9" class="st16" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>Why?</text>		</g>
		<g id="group64-215" transform="translate(793.417,-907.795)" v:mID="64" v:groupContext="group">
			<v:userDefs>
				<v:ud v:nameU="ControlDistFromCorner" v:prompt="" v:val="VT0(0.33406619583616):24"/>
				<v:ud v:nameU="AngToControl" v:prompt="" v:val="VT0(0.78539816339745):32"/>
				<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
				<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
				<v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
				<v:ud v:nameU="ControlDistFromCorner" v:prompt="" v:val="VT0(0.21502008225821):1"/>
				<v:ud v:nameU="AngToControl" v:prompt="" v:val="VT0(0.46519135255607):32"/>
				<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.23966009862918):1"/>
				<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.12029287408952):1"/>
			</v:userDefs>
			<title>Folded Corner.64</title>
			<desc>The Factory Method design pattern compliments the Single Resp...</desc>
			<g id="shape64-216" v:mID="64" v:groupContext="groupContent">
				<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197" v:verticalAlign="0"/>
				<v:textRect cx="89.6457" cy="1176.65" width="179.3" height="523.869"/>
				<path d="M0 1438.58 L162.04 1438.58 L179.29 1429.92 L179.29 914.71 L0 914.71 L0 1438.58 Z" class="st8"/>
				<text x="4" y="927.71" class="st9" v:langID="1033"><v:paragraph/><v:tabList/>The Factory Method design pattern <tspan
							x="4" dy="1.2em" class="st6">compliments the Single Responsibility </tspan><tspan x="4" dy="1.2em"
							class="st6">principle by hiding the relationship </tspan><tspan x="4" dy="1.2em" class="st6">between classes </tspan>and their details. This <tspan
							x="4" dy="1.2em" class="st6">enhances </tspan><tspan class="st10">readability</tspan>, <tspan
							class="st10">reusability </tspan>and <tspan x="4" dy="1.2em" class="st10">maintainability</tspan>. <tspan
							class="st11">All aspects are compared </tspan><tspan x="4" dy="1.2em" class="st11">against an implementation where client </tspan><tspan
							x="4" dy="1.2em" class="st11">knows how two parallel class hierarchies </tspan><tspan x="4" dy="1.2em"
							class="st11">relate and facilitates the corresponding </tspan><tspan x="4" dy="1.2em" class="st11">instantiation logic.</tspan> <tspan
							class="st10">Readability</tspan>, because <tspan x="4" dy="1.2em" class="st6">the client is not </tspan>‘obscured’ with logic that <tspan
							x="4" dy="1.2em" class="st6">clarifies how two parallel class hierarchies </tspan><tspan x="4"
							dy="1.2em" class="st6">relate. I.e. the logic that instantiates </tspan><tspan x="4" dy="1.2em"
							class="st6">corresponding object x </tspan>when class y is <tspan x="4" dy="1.2em" class="st6">created. The Factory Method </tspan><tspan
							x="4" dy="1.2em" class="st6">encapsulates this creation logic. The </tspan><tspan x="4" dy="1.2em"
							class="st6">client is only responsible for instantiating </tspan><tspan x="4" dy="1.2em" class="st6">object y (=Creator) and can retrieve </tspan><tspan
							x="4" dy="1.2em" class="st6">object x (=Product) from it. This makes </tspan><tspan x="4" dy="1.2em"
							class="st6">client code more </tspan>‘focused’. <tspan class="st10">Reusability</tspan>, <tspan x="4"
							dy="1.2em" class="st6">because each client can reuse the same </tspan><tspan x="4" dy="1.2em"
							class="st6">Product instantiation logic. The Factory </tspan><tspan x="4" dy="1.2em" class="st6">method prevents duplication of logic that </tspan><tspan
							x="4" dy="1.2em" class="st6">clarifies class relations and concrete </tspan><tspan x="4" dy="1.2em"
							class="st6">Product instantiation. </tspan><tspan class="st10">Maintainability</tspan>, <tspan x="4"
							dy="1.2em" class="st6">because centralizing the Product </tspan><tspan x="4" dy="1.2em" class="st6">instantiation logic, by encapsulating it </tspan><tspan
							x="4" dy="1.2em" class="st6">from the clients, results in </tspan>‘ease’ of <tspan x="4" dy="1.2em"
							class="st6">change. In contrast, clients instantiating </tspan><tspan x="4" dy="1.2em" class="st6">Products corresponding to the Creator </tspan><tspan
							x="4" dy="1.2em" class="st6">will result in difficulties when the </tspan><tspan x="4" dy="1.2em"
							class="st6">concrete Product must change. In this </tspan><tspan x="4" dy="1.2em" class="st6">case, the concrete Product instantiation </tspan><tspan
							x="4" dy="1.2em" class="st6">must be changed in multiple places of the </tspan><tspan x="4" dy="1.2em"
							class="st6">code base. The Factory Method design </tspan><tspan x="4" dy="1.2em" class="st6">pattern prevents this by localizing </tspan><tspan
							x="4" dy="1.2em" class="st6">Product instantiation logic and making </tspan><tspan x="4" dy="1.2em"
							class="st6">clients only </tspan>dependent on a Product <tspan x="4" dy="1.2em" class="st6">abstraction. Additionally to the </tspan><tspan
							x="4" dy="1.2em" class="st6">maintenance aspect, the client not being </tspan><tspan x="4" dy="1.2em"
							class="st6">dependent on concrete Product results in </tspan><tspan x="4" dy="1.2em" class="st6">no re</tspan>-compilation of the client when the <tspan
							x="4" dy="1.2em" class="st6">concrete Product changes. </tspan> </text>			</g>
			<g id="shape65-268" v:mID="65" v:groupContext="shape" transform="translate(162.036,0)">
				<title>Sheet.65</title>
				<v:userDefs>
					<v:ud v:nameU="ControlX" v:prompt="" v:val="VT0(0.94488188976378):24"/>
					<v:ud v:nameU="ControlY" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="FillForegnd" v:prompt="" v:val="VT0(1):26"/>
					<v:ud v:nameU="ControlX" v:prompt="" v:val="VT0(2.3937006744949):1"/>
					<v:ud v:nameU="ControlY" v:prompt="" v:val="VT0(0.19217113284666):1"/>
					<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.23966009862918):1"/>
					<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.12029287408952):1"/>
					<v:ud v:nameU="FillForegnd" v:prompt="" v:val="VT5(#70ad47)"/>
				</v:userDefs>
				<path d="M0 1438.58 L17.26 1429.92 L10.31 1424.75 L0 1438.58 Z" class="st12"/>
			</g>
		</g>
		<g id="shape66-271" v:mID="66" v:groupContext="shape" v:layerMember="0" transform="translate(760.984,-1162.64)">
			<title>Dynamic connector.66</title>
			<desc>I.e.</desc>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="16.2165" cy="1431.5" width="40" height="17.6036"/>
			<path d="M0 1431.5 L24.83 1431.5" class="st13"/>
			<rect v:rectContext="textBkgnd" x="11.1989" y="1426.7" width="10.0352" height="9.59985" class="st15"/>
			<text x="11.2" y="1433.9" class="st16" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>I.e.</text>		</g>
		<g id="shape69-278" v:mID="69" v:groupContext="shape" v:layerMember="0" transform="translate(482.539,-595.276)">
			<title>Dynamic connector.69</title>
			<path d="M7.09 1438.58 L7.09 1467.83" class="st24"/>
		</g>
		<g id="shape70-283" v:mID="70" v:groupContext="shape" v:layerMember="0" transform="translate(489.626,-595.276)">
			<title>Dynamic connector</title>
			<desc>When?</desc>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="0.610233" cy="1447.38" width="40" height="17.6036"/>
			<path d="M0 1438.58 L0 1454.53 L-189.15 1454.53 L-189.15 1467.83" class="st24"/>
			<rect v:rectContext="textBkgnd" x="-10.9951" y="1442.58" width="23.2108" height="9.59985" class="st15"/>
			<text x="-11" y="1449.78" class="st27" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>When?</text>		</g>
		<g id="shape72-290" v:mID="72" v:groupContext="shape" transform="translate(404.587,-705.827)">
			<title>Rectangle.72</title>
			<desc>The dependencies a class works with need to change dynamically</desc>
			<v:userDefs>
				<v:ud v:nameU="visVersion" v:val="VT0(15):26"/>
			</v:userDefs>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="85.0394" cy="1415.91" width="170.08" height="45.3543"/>
			<rect x="0" y="1393.23" width="170.079" height="45.3543" class="st28"/>
			<text x="10.36" y="1412.91" class="st5" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>The dependencies a class works with <tspan
						x="28.38" dy="1.2em" class="st6">need to change dynamically</tspan></text>		</g>
		<g id="shape73-296" v:mID="73" v:groupContext="shape" v:layerMember="0" transform="translate(482.539,-680.315)">
			<title>Dynamic connector.73</title>
			<desc>When not?</desc>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="7.08661" cy="1429.78" width="45.94" height="17.6036"/>
			<path d="M7.09 1438.58 L7.09 1420.67" class="st29"/>
			<rect v:rectContext="textBkgnd" x="-10.9737" y="1424.98" width="36.1208" height="9.59985" class="st15"/>
			<text x="-10.97" y="1432.18" class="st31" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>When not?</text>		</g>
		<g id="group74-304" transform="translate(404.587,-776.693)" v:mID="74" v:groupContext="group">
			<v:userDefs>
				<v:ud v:nameU="ControlDistFromCorner" v:prompt="" v:val="VT0(0.33406619583616):24"/>
				<v:ud v:nameU="AngToControl" v:prompt="" v:val="VT0(0.78539816339745):32"/>
				<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
				<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
				<v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
				<v:ud v:nameU="ControlDistFromCorner" v:prompt="" v:val="VT0(0.15967138590125):1"/>
				<v:ud v:nameU="AngToControl" v:prompt="" v:val="VT0(0.73816073531827):32"/>
				<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.11863918539219):1"/>
				<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.10792873215234):1"/>
			</v:userDefs>
			<title>Folded Corner.74</title>
			<desc>The Factory method design pattern does not facilitate dynamic...</desc>
			<g id="shape74-305" v:mID="74" v:groupContext="groupContent">
				<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197" v:verticalAlign="0"/>
				<v:textRect cx="85.0394" cy="1343.97" width="170.08" height="189.217"/>
				<path d="M0 1438.58 L161.54 1438.58 L170.08 1430.81 L170.08 1249.37 L0 1249.37 L0 1438.58 Z" class="st32"/>
				<text x="4" y="1262.37" class="st33" v:langID="1033"><v:paragraph/><v:tabList/>The Factory method design pattern <tspan
							x="4" dy="1.2em" class="st6">does not facilitate dynamically </tspan><tspan x="4" dy="1.2em"
							class="st6">switching the dependency of a class. </tspan><tspan x="4" dy="1.2em" class="st6">The Factory method realizes </tspan><tspan
							x="4" dy="1.2em" class="st6">dependency (=Product) flexibility of a </tspan><tspan x="4" dy="1.2em"
							class="st6">class(=Creator) via inheritance. </tspan><tspan x="4" dy="1.2em" class="st6">Inheritance is static, which prevents </tspan><tspan
							x="4" dy="1.2em" class="st6">changing the Product dependency of a </tspan><tspan x="4" dy="1.2em"
							class="st6">Creator instance </tspan>during runtime. <tspan x="4" dy="1.2em" class="st6">Runtime Product flexibility can be </tspan><tspan
							x="4" dy="1.2em" class="st6">realized by Dependency injection via </tspan><tspan x="4" dy="1.2em"
							class="st6">composition or aggregation. However, </tspan><tspan x="4" dy="1.2em" class="st6">applying these techniques will be at the </tspan><tspan
							x="4" dy="1.2em" class="st6">expense of familiarity with the injected </tspan><tspan x="4" dy="1.2em"
							class="st6">dependency on client side.</tspan></text>			</g>
			<g id="shape75-324" v:mID="75" v:groupContext="shape" transform="translate(161.537,0)">
				<title>Sheet.75</title>
				<v:userDefs>
					<v:ud v:nameU="ControlX" v:prompt="" v:val="VT0(0.94488188976378):24"/>
					<v:ud v:nameU="ControlY" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="FillForegnd" v:prompt="" v:val="VT0(1):26"/>
					<v:ud v:nameU="ControlX" v:prompt="" v:val="VT0(2.2547572712316):1"/>
					<v:ud v:nameU="ControlY" v:prompt="" v:val="VT0(0.1181101221482):1"/>
					<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.11863918539219):1"/>
					<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.10792873215234):1"/>
					<v:ud v:nameU="FillForegnd" v:prompt="" v:val="VT5(#4672c4)"/>
				</v:userDefs>
				<path d="M0 1438.58 L8.54 1430.81 L0.81 1430.08 L0 1438.58 Z" class="st34"/>
			</g>
		</g>
		<g id="shape77-328" v:mID="77" v:groupContext="shape" v:layerMember="0" transform="translate(482.539,-751.181)">
			<title>Dynamic connector.77</title>
			<desc>I.e.</desc>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="7.08661" cy="1429.78" width="40" height="17.6036"/>
			<path d="M7.09 1438.58 L7.09 1420.67" class="st29"/>
			<rect v:rectContext="textBkgnd" x="2.06894" y="1424.98" width="10.0352" height="9.59985" class="st15"/>
			<text x="2.07" y="1432.18" class="st31" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>I.e.</text>		</g>
		<g id="group79-335" transform="translate(4.96063,-535.465)" v:mID="79" v:groupContext="group">
			<v:userDefs>
				<v:ud v:nameU="ControlDistFromCorner" v:prompt="" v:val="VT0(0.33406619583616):24"/>
				<v:ud v:nameU="AngToControl" v:prompt="" v:val="VT0(0.78539816339745):32"/>
				<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
				<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
				<v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
				<v:ud v:nameU="ControlDistFromCorner" v:prompt="" v:val="VT0(0.16806319116387):1"/>
				<v:ud v:nameU="AngToControl" v:prompt="" v:val="VT0(1.0256282448776):32"/>
				<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.098277953811463):1"/>
				<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.16204740344075):1"/>
			</v:userDefs>
			<title>Folded Corner.79</title>
			<desc>The Factory Method design pattern entails both the negative a...</desc>
			<g id="shape79-336" v:mID="79" v:groupContext="groupContent">
				<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197" v:verticalAlign="0"/>
				<v:textRect cx="89.6457" cy="1336.25" width="179.3" height="204.661"/>
				<path d="M0 1438.58 L172.22 1438.58 L179.29 1426.92 L179.29 1233.92 L0 1233.92 L0 1438.58 Z" class="st35"/>
				<text x="4" y="1246.92" class="st36" v:langID="1033"><v:paragraph/><v:tabList/>The Factory Method design pattern <tspan
							x="4" dy="1.2em" class="st6">entails both the negative and positive </tspan><tspan x="4" dy="1.2em"
							class="st6">side of the Open Closed principle. The </tspan><tspan x="4" dy="1.2em" class="st6">additional forms of indirection between </tspan><tspan
							x="4" dy="1.2em" class="st6">Product and Creator and Creator and </tspan><tspan x="4" dy="1.2em"
							class="st6">Product instantiation </tspan><tspan class="st10">negatively </tspan>impacts <tspan x="4"
							dy="1.2em" class="st6">the </tspan><tspan class="st10">debuggability</tspan>, <tspan class="st10">navigability </tspan>and <tspan
							x="4" dy="1.2em" class="st10">readability </tspan>of the code. In contrast, <tspan x="4" dy="1.2em"
							class="st6">instantiating the Product directly within </tspan><tspan x="4" dy="1.2em" class="st6">the Creator and not in its subclasses </tspan><tspan
							x="4" dy="1.2em" class="st6">allows us to quickly comprehend the </tspan><tspan x="4" dy="1.2em"
							class="st6">dependency model of the Creator. On top </tspan><tspan x="4" dy="1.2em" class="st6">of that navigability increases when no </tspan><tspan
							x="4" dy="1.2em" class="st6">abstraction is used between Product and </tspan><tspan x="4" dy="1.2em"
							class="st6">Creator, because we can directly navigate </tspan><tspan x="4" dy="1.2em" class="st6">to the Product implementation.  </tspan>  </text>			</g>
			<g id="shape80-359" v:mID="80" v:groupContext="shape" transform="translate(168.945,0)">
				<title>Sheet.80</title>
				<v:userDefs>
					<v:ud v:nameU="ControlX" v:prompt="" v:val="VT0(0.94488188976378):24"/>
					<v:ud v:nameU="ControlY" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.23622047244094):24"/>
					<v:ud v:nameU="FillForegnd" v:prompt="" v:val="VT0(1):26"/>
					<v:ud v:nameU="ControlX" v:prompt="" v:val="VT0(2.3464565815145):1"/>
					<v:ud v:nameU="ControlY" v:prompt="" v:val="VT0(0.087151153379976):1"/>
					<v:ud v:nameU="XFoldLength" v:prompt="" v:val="VT0(0.098277953811463):1"/>
					<v:ud v:nameU="YFoldLength" v:prompt="" v:val="VT0(0.16204740344075):1"/>
					<v:ud v:nameU="FillForegnd" v:prompt="" v:val="VT5(#fec000)"/>
				</v:userDefs>
				<path d="M3.27 1438.58 L10.35 1426.92 L0 1432.31 L3.27 1438.58 Z" class="st37"/>
			</g>
		</g>
		<g id="shape82-363" v:mID="82" v:groupContext="shape" v:layerMember="0" transform="translate(218.268,-630.709)">
			<title>Dynamic connector.82</title>
			<desc>I.e.</desc>
			<v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
			<v:textRect cx="-14.1732" cy="1431.5" width="40" height="17.6036"/>
			<path d="M0 1431.5 L-26.42 1431.5" class="st18"/>
			<rect v:rectContext="textBkgnd" x="-19.1909" y="1426.7" width="10.0352" height="9.59985" class="st26"/>
			<text x="-19.19" y="1433.9" class="st20" v:langID="1033"><v:paragraph v:horizAlign="1"/><v:tabList/>I.e.</text>		</g>
	</g>
</svg>
